
plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	// Test coverage
	id 'jacoco'

	// Code style
	id 'checkstyle'

	// PMD
	id 'pmd'

	// PITest
	id 'info.solidsoft.pitest'
}
apply plugin: 'info.solidsoft.pitest'
group = 'service.buildingandroomhandlingservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
	mavenCentral()
}

dependencies {


    // https://mvnrepository.com/artifact/org.mockito/mockito-inline
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '2.7.21'

    // https://mvnrepository.com/artifact/io.rest-assured/spring-mock-mvc
    testImplementation group: 'io.rest-assured', name: 'spring-mock-mvc', version: '3.0.0'

    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation group: 'org.powermock', name: 'powermock-reflect', version: '1.6.1'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.1.0'

    testImplementation('org.assertj:assertj-core:3.14.0')
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api'
    implementation group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'
    // https://mvnrepository.com/artifact/com.h2database/h2
    testImplementation group: 'com.h2database', name: 'h2', version: '1.3.148'
    implementation 'com.h2database:h2:1.4.199'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    // https://mvnrepository.com/artifact/com.auth0/java-jwt
    implementation group: 'com.auth0', name: 'java-jwt', version: '2.0.1'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['service.buildingandroomhandlingservice.*']
		excludes = []
	}
}

repositories {
	mavenCentral()
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['service.buildingandroomhandlingservice.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}
	}
}

checkstyle {
	toolVersion "8.37"
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	ignoreFailures(false)
	maxWarnings(0)
}

pmd {
	incrementalAnalysis = true
    ruleSets = ["${rootDir}/config/pmd/pmd.xml"]
}



pitest {
	//adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
	junit5PluginVersion = '0.12'

	targetClasses = ['service.buildingandroomhandlingservice.*']  //by default "${project.group}.*"
	pitestVersion = '1.5.1' //not needed when a default PIT version should be used
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
}
